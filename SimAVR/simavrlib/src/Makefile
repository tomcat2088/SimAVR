# Makefile.in generated by automake 1.15 from Makefile.am.
# src/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2014 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



#
#  $Id$
#




am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target my_option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/simulavr
pkgincludedir = $(includedir)/simulavr
pkglibdir = $(libdir)/simulavr
pkglibexecdir = $(libexecdir)/simulavr
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-apple-darwin16.4.0
host_triplet = x86_64-apple-darwin16.4.0
#am__append_1 = python
bin_PROGRAMS = simulavr$(EXEEXT)
noinst_PROGRAMS = kbdgentables$(EXEEXT)
#am__append_2 = libsimulavr.la
#am__append_3 = avr.vpi.la
#am__append_4 = -no-undefined
#am__append_5 = -no-undefined
#am__append_6 = $(TCL_LIB)
subdir = src
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/ac_pkg_swig.m4 \
	$(top_srcdir)/m4/avr_tcl.m4 \
	$(top_srcdir)/m4/ax_prog_doxygen.m4 \
	$(top_srcdir)/m4/ax_python_module.m4 \
	$(top_srcdir)/m4/az_python.m4 $(top_srcdir)/m4/check_mingw.m4 \
	$(top_srcdir)/m4/check_msys_zlib.m4 \
	$(top_srcdir)/m4/check_winsock.m4 $(top_srcdir)/m4/libtool.m4 \
	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
	$(top_srcdir)/m4/swig_enable_cxx.m4 $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(pkginclude_HEADERS) \
	$(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__installdirs = "$(DESTDIR)$(ivldir)" "$(DESTDIR)$(libdir)" \
	"$(DESTDIR)$(tcldir)" "$(DESTDIR)$(bindir)" \
	"$(DESTDIR)$(pkgincludedir)"
LTLIBRARIES = $(ivl_LTLIBRARIES) $(lib_LTLIBRARIES) \
	$(noinst_LTLIBRARIES) $(tcl_LTLIBRARIES)
am__DEPENDENCIES_1 =
#avr_vpi_la_DEPENDENCIES = libsim.la \
#	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am__avr_vpi_la_SOURCES_DIST = vpi.cpp
#am_avr_vpi_la_OBJECTS = avr_vpi_la-vpi.lo
avr_vpi_la_OBJECTS = $(am_avr_vpi_la_OBJECTS)
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am__v_lt_1 = 
avr_vpi_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(avr_vpi_la_CXXFLAGS) \
	$(CXXFLAGS) $(avr_vpi_la_LDFLAGS) $(LDFLAGS) -o $@
#am_avr_vpi_la_rpath = -rpath $(ivldir)
libsim_la_DEPENDENCIES = $(am__DEPENDENCIES_1)
am__dirstamp = $(am__leading_dot)dirstamp
am_libsim_la_OBJECTS = at4433.lo at8515.lo atmega668base.lo \
	atmega128.lo at90canbase.lo atmega8.lo atmega1284abase.lo \
	attiny25_45_85.lo atmega16_32.lo attiny2313.lo adcpin.lo \
	application.lo externalirq.lo avrdevice.lo avrerror.lo \
	avrfactory.lo avrmalloc.lo decoder.lo decoder_trace.lo \
	flash.lo flashprog.lo hardware.lo helper.lo cmd/gdbserver.lo \
	hwacomp.lo hwad.lo hweeprom.lo avrsignature.lo avrreadelf.lo \
	cmd/dumpargs.lo hwtimer/timerprescaler.lo \
	hwtimer/prescalermux.lo hwtimer/timerirq.lo hwpinchange.lo \
	hwport.lo hwspi.lo hwsreg.lo hwtimer/icapturesrc.lo hwstack.lo \
	hwtimer/hwtimer.lo hwuart.lo hwwado.lo ioregs.lo irqsystem.lo \
	ui/keyboard.lo ui/lcd.lo memory.lo ui/mysocket.lo net.lo \
	pin.lo ui/extpin.lo pinatport.lo pinmon.lo rwmem.lo \
	ui/scope.lo ui/serialrx.lo ui/serialtx.lo spisrc.lo spisink.lo \
	specialmem.lo string2.lo systemclock.lo traceval.lo ui/ui.lo
libsim_la_OBJECTS = $(am_libsim_la_OBJECTS)
libsim_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(libsim_la_LDFLAGS) $(LDFLAGS) -o $@
#am__DEPENDENCIES_2 = $(am__DEPENDENCIES_1)
libsimulavr_la_DEPENDENCIES = libsim.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_2)
#am__objects_1 = simulavr_wrap.lo
nodist_libsimulavr_la_OBJECTS = $(am__objects_1)
libsimulavr_la_OBJECTS = $(nodist_libsimulavr_la_OBJECTS)
libsimulavr_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(AM_CXXFLAGS) $(CXXFLAGS) $(libsimulavr_la_LDFLAGS) \
	$(LDFLAGS) -o $@
#am_libsimulavr_la_rpath = -rpath \
#	$(tcldir)
PROGRAMS = $(bin_PROGRAMS) $(noinst_PROGRAMS)
am_kbdgentables_OBJECTS = ui/kbdgentables.$(OBJEXT)
kbdgentables_OBJECTS = $(am_kbdgentables_OBJECTS)
kbdgentables_LDADD = $(LDADD)
am_simulavr_OBJECTS = cmd/main.$(OBJEXT)
simulavr_OBJECTS = $(am_simulavr_OBJECTS)
simulavr_DEPENDENCIES = libsim.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I.
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_$(V))
am__v_CXX_ = $(am__v_CXX_$(AM_DEFAULT_VERBOSITY))
am__v_CXX_0 = @echo "  CXX     " $@;
am__v_CXX_1 = 
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CXXLD = $(am__v_CXXLD_$(V))
am__v_CXXLD_ = $(am__v_CXXLD_$(AM_DEFAULT_VERBOSITY))
am__v_CXXLD_0 = @echo "  CXXLD   " $@;
am__v_CXXLD_1 = 
SOURCES = $(avr_vpi_la_SOURCES) $(libsim_la_SOURCES) \
	$(nodist_libsimulavr_la_SOURCES) $(kbdgentables_SOURCES) \
	$(simulavr_SOURCES)
DIST_SOURCES = $(am__avr_vpi_la_SOURCES_DIST) $(libsim_la_SOURCES) \
	$(kbdgentables_SOURCES) $(simulavr_SOURCES)
RECURSIVE_TARGETS = all-recursive check-recursive cscopelist-recursive \
	ctags-recursive dvi-recursive html-recursive info-recursive \
	install-data-recursive install-dvi-recursive \
	install-exec-recursive install-html-recursive \
	install-info-recursive install-pdf-recursive \
	install-ps-recursive install-recursive installcheck-recursive \
	installdirs-recursive pdf-recursive ps-recursive \
	tags-recursive uninstall-recursive
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
HEADERS = $(pkginclude_HEADERS)
RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\
  distclean-recursive maintainer-clean-recursive
am__recursive_targets = \
  $(RECURSIVE_TARGETS) \
  $(RECURSIVE_CLEAN_TARGETS) \
  $(am__extra_recursive_targets)
AM_RECURSIVE_TARGETS = $(am__recursive_targets:-recursive=) TAGS CTAGS \
	distdir
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) \
	$(LISP)config.h.in
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
DIST_SUBDIRS = hwtimer cmd ui . python
am__DIST_COMMON = $(srcdir)/Makefile.in $(srcdir)/config.h.in \
	$(top_srcdir)/depcomp
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
am__relativize = \
  dir0=`pwd`; \
  sed_first='s,^\([^/]*\)/.*$$,\1,'; \
  sed_rest='s,^[^/]*/*,,'; \
  sed_last='s,^.*/\([^/]*\)$$,\1,'; \
  sed_butlast='s,/*[^/]*$$,,'; \
  while test -n "$$dir1"; do \
    first=`echo "$$dir1" | sed -e "$$sed_first"`; \
    if test "$$first" != "."; then \
      if test "$$first" = ".."; then \
        dir2=`echo "$$dir0" | sed -e "$$sed_last"`/"$$dir2"; \
        dir0=`echo "$$dir0" | sed -e "$$sed_butlast"`; \
      else \
        first2=`echo "$$dir2" | sed -e "$$sed_first"`; \
        if test "$$first2" = "$$first"; then \
          dir2=`echo "$$dir2" | sed -e "$$sed_rest"`; \
        else \
          dir2="../$$dir2"; \
        fi; \
        dir0="$$dir0"/"$$first"; \
      fi; \
    fi; \
    dir1=`echo "$$dir1" | sed -e "$$sed_rest"`; \
  done; \
  reldir="$$dir2"
ACLOCAL = ${SHELL} /Users/ocean/Documents/Codes/AVR/simulavr/missing aclocal-1.15
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 1
AR = ar
AUTOCONF = ${SHELL} /Users/ocean/Documents/Codes/AVR/simulavr/missing autoconf
AUTOHEADER = ${SHELL} /Users/ocean/Documents/Codes/AVR/simulavr/missing autoheader
AUTOMAKE = ${SHELL} /Users/ocean/Documents/Codes/AVR/simulavr/missing automake-1.15
AVR_AS = avr-as
AVR_GCC = avr-gcc
AVR_GXX = avr-g++
AVR_LD = avr-ld
AVR_TCL_INCLUDE = 
AVR_TCL_LIB = 
AVR_TCL_MODULE_SUFFIX = 
AWK = awk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CPP = gcc -E
CPPFLAGS = 
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2
CXX_PROG = yes
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DISTCHECK_CONFIGURE_FLAGS = 
DLLTOOL = false
DOLLAR_SIGN = $
DOXYGEN_PAPER_SIZE = 
DSYMUTIL = dsymutil
DUMPBIN = 
DX_CONFIG = simulavr.doxy
DX_DOCDIR = doxygen-doc
DX_DOT = 
DX_DOXYGEN = 
DX_DVIPS = 
DX_EGREP = 
DX_ENV =  SRCDIR='.' PROJECT='Simulavr' DOCDIR='doxygen-doc' VERSION='1.1dev' HAVE_DOT='NO' GENERATE_MAN='NO' GENERATE_RTF='NO' GENERATE_XML='NO' GENERATE_HTMLHELP='NO' GENERATE_CHI='NO' GENERATE_HTML='NO' GENERATE_LATEX='NO'
DX_FLAG_chi = 0
DX_FLAG_chm = 0
DX_FLAG_doc = 0
DX_FLAG_dot = 0
DX_FLAG_html = 0
DX_FLAG_man = 0
DX_FLAG_pdf = 0
DX_FLAG_ps = 0
DX_FLAG_rtf = 0
DX_FLAG_xml = 0
DX_HHC = 
DX_LATEX = 
DX_MAKEINDEX = 
DX_PDFLATEX = 
DX_PERL = 
DX_PROJECT = Simulavr
ECHO_C = \c
ECHO_N = 
ECHO_T = 
EGREP = /usr/bin/grep -E
EXEEXT = 
EXTRA_LIBS = 
FGREP = /usr/bin/grep -F
GNUTIME = yes
GREP = /usr/bin/grep
GTKWAVE = 
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
IVERILOG = 
LD = /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ld
LDFLAGS = 
LIBOBJS = 
LIBS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIBWSOCK_FLAGS = 
LIBZ_FLAGS = 
LIPO = lipo
LN_S = ln -s
LTLIBOBJS = 
LT_SYS_LIBRARY_PATH = 
MAKEINFO = ${SHELL} /Users/ocean/Documents/Codes/AVR/simulavr/missing makeinfo
MAKEINFO_PROG = yes
MANIFEST_TOOL = :
MKDIR_P = .././install-sh -c -d
NM = /usr/bin/nm -B
NMEDIT = nmedit
OBJDUMP = objdump
OBJEXT = o
OTOOL = otool
OTOOL64 = :
PACKAGE = simulavr
PACKAGE_BUGREPORT = simulavr-devel@nongnu.org
PACKAGE_NAME = SimulAVR
PACKAGE_STRING = SimulAVR 1.1dev
PACKAGE_TARNAME = simulavr
PACKAGE_URL = 
PACKAGE_VERSION = 1.1dev
PATH_SEPARATOR = :
PYTHON = /usr/local/bin/python
PYTHON_EXECPREFIX = 
PYTHON_EXEC_PREFIX = ${exec_prefix}
PYTHON_MODULE_EXTENSION = .so
PYTHON_PLATFORM = darwin
PYTHON_PREFIX = ${prefix}
PYTHON_VERSION = 2.7
RANLIB = ranlib
SED = /usr/bin/sed
SET_MAKE = 
SHELL = /bin/sh
STRIP = strip
SWIG = echo "Error: SWIG is not installed. You should look at http://www.swig.org" ; false -c++
SWIG_LIB = 
TCL_SHELL = /usr/bin/tclsh
TCL_WISH = /usr/bin/wish
TEX = no
VERSION = 1.1dev
VVP = 
abs_builddir = /Users/ocean/Documents/Codes/AVR/simulavr/src
abs_srcdir = /Users/ocean/Documents/Codes/AVR/simulavr/src
abs_top_builddir = /Users/ocean/Documents/Codes/AVR/simulavr
abs_top_srcdir = /Users/ocean/Documents/Codes/AVR/simulavr
ac_ct_AR = ar
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
bindir = ${exec_prefix}/bin
build = x86_64-apple-darwin16.4.0
build_alias = 
build_cpu = x86_64
build_os = darwin16.4.0
build_vendor = apple
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-apple-darwin16.4.0
host_alias = 
host_cpu = x86_64
host_os = darwin16.4.0
host_vendor = apple
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /Users/ocean/Documents/Codes/AVR/simulavr/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
oldincludedir = /usr/include
pdfdir = ${docdir}
pkgpyexecdir = ${pyexecdir}/simulavr
pkgpythondir = ${pythondir}/simulavr
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
pyexecdir = ${exec_prefix}/lib/python2.7/site-packages
pythondir = ${prefix}/lib/python2.7/site-packages
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../
top_builddir = ..
top_srcdir = ..
SUBDIRS = hwtimer cmd ui . $(am__append_1)
AM_CXXFLAGS = -Ielfio -g -O2 -Icmd -Iui -Ihwtimer
lib_LTLIBRARIES = libsim.la
noinst_LTLIBRARIES = 
tcldir = $(libdir)/tcl
tcl_LTLIBRARIES = $(am__append_2)
ivldir = $(libdir)/ivl
ivl_LTLIBRARIES = $(am__append_3)
#TCL_WRAP_SRC = simulavr_wrap.cxx
#TCL_LIB = 
#TCL_INCLUDE = 
libsim_la_SOURCES = \
  at4433.cpp at8515.cpp atmega668base.cpp atmega128.cpp at90canbase.cpp \
  atmega8.cpp atmega1284abase.cpp attiny25_45_85.cpp atmega16_32.cpp \
  attiny2313.cpp adcpin.cpp application.cpp externalirq.cpp \
  avrdevice.cpp avrerror.cpp avrfactory.cpp avrmalloc.cpp decoder.cpp \
  decoder_trace.cpp flash.cpp flashprog.cpp hardware.cpp helper.cpp cmd/gdbserver.cpp \
  hwacomp.cpp hwad.cpp hweeprom.cpp avrsignature.cpp avrreadelf.cpp cmd/dumpargs.cpp \
  hwtimer/timerprescaler.cpp hwtimer/prescalermux.cpp \
  hwtimer/timerirq.cpp hwpinchange.cpp hwport.cpp hwspi.cpp hwsreg.cpp \
  hwtimer/icapturesrc.cpp hwstack.cpp hwtimer/hwtimer.cpp hwuart.cpp hwwado.cpp \
  ioregs.cpp irqsystem.cpp ui/keyboard.cpp ui/lcd.cpp memory.cpp \
  ui/mysocket.cpp net.cpp pin.cpp ui/extpin.cpp pinatport.cpp pinmon.cpp \
  rwmem.cpp ui/scope.cpp ui/serialrx.cpp ui/serialtx.cpp spisrc.cpp spisink.cpp \
  specialmem.cpp string2.cpp systemclock.cpp traceval.cpp ui/ui.cpp 

libsim_la_LDFLAGS = -shared -avoid-version -rpath $(libdir) \
	$(am__append_4)
libsim_la_LIBADD = $(LIBWSOCK_FLAGS)
nodist_libsimulavr_la_SOURCES = $(TCL_WRAP_SRC)
libsimulavr_la_LDFLAGS = -module -avoid-version -shared \
	$(am__append_5)
libsimulavr_la_LIBADD = libsim.la $(LIBZ_FLAGS) $(EXTRA_LIBS) \
	$(am__append_6)
pkginclude_HEADERS = \
  adcpin.h application.h at4433.h at8515.h atmega128.h atmega16_32.h attiny2313.h \
  at90canbase.h atmega8.h attiny25_45_85.h atmega668base.h atmega1284abase.h avrdevice.h \
  externalirq.h hardware.h helper.h avrdevice_impl.h avrerror.h avrfactory.h avrmalloc.h \
  string2.h decoder.h externaltype.h flash.h flashprog.h hwdecls.h \
  funktor.h hwacomp.h hwad.h hweeprom.h string2_template.h hwpinchange.h \
  hwport.h hwspi.h hwsreg.h hwstack.h hwuart.h hwwado.h ioregs.h irqsystem.h \
  memory.h net.h pin.h pinatport.h pinnotify.h pinmon.h printable.h rwmem.h \
  simulationmember.h spisrc.h spisink.h specialmem.h systemclock.h \
  systemclocktypes.h traceval.h types.h avrsignature.h avrreadelf.h \
  elfio/elfio/elf_types.hpp elfio/elfio/elfio.hpp elfio/elfio/elfio_dump.hpp \
  elfio/elfio/elfio_dynamic.hpp elfio/elfio/elfio_header.hpp elfio/elfio/elfio_note.hpp \
  elfio/elfio/elfio_relocation.hpp elfio/elfio/elfio_section.hpp \
  elfio/elfio/elfio_segment.hpp elfio/elfio/elfio_strings.hpp \
  elfio/elfio/elfio_symbols.hpp elfio/elfio/elfio_utils.hpp

simulavr_SOURCES = cmd/main.cpp
simulavr_LDADD = libsim.la $(LIBZ_FLAGS) $(EXTRA_LIBS)
#VPI_LIB = avr.vpi
#avr_vpi_la_SOURCES = vpi.cpp
#avr_vpi_la_LDFLAGS = -avoid-version -module -shared
#avr_vpi_la_LIBADD = libsim.la $(LIBZ_FLAGS) $(EXTRA_LIBS)
#avr_vpi_la_CXXFLAGS = $(AM_CXXFLAGS)
TCLHEADER = avrdevice.h at8515.h atmega128.h at4433.h cmd/gdb.h hardware.h \
    ui/keyboard.h ui/lcd.h net.h pin.h ui/extpin.h ui/keyboard.h rwmem.h \
    ui/scope.h ui/serialrx.h ui/serialtx.h systemclock.h systemclocktypes.h \
    ui/ui.h

kbdgentables_SOURCES = ui/kbdgentables.cpp
EXTRA_DIST = simulavr.i elfio/AUTHORS elfio/COPYING elfio/README elfio/VERSION
MAINTAINERCLEANFILES = ui/keytrans.h
CLEANFILES = simulavr_wrap.cxx $(VPI_LIB)
all: config.h
	$(MAKE) $(AM_MAKEFLAGS) all-recursive

.SUFFIXES:
.SUFFIXES: .cpp .cxx .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign src/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign src/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

config.h: stamp-h1
	@test -f $@ || rm -f stamp-h1
	@test -f $@ || $(MAKE) $(AM_MAKEFLAGS) stamp-h1

stamp-h1: $(srcdir)/config.h.in $(top_builddir)/config.status
	@rm -f stamp-h1
	cd $(top_builddir) && $(SHELL) ./config.status src/config.h
$(srcdir)/config.h.in:  $(am__configure_deps) 
	($(am__cd) $(top_srcdir) && $(AUTOHEADER))
	rm -f stamp-h1
	touch $@

distclean-hdr:
	-rm -f config.h stamp-h1

install-ivlLTLIBRARIES: $(ivl_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	@list='$(ivl_LTLIBRARIES)'; test -n "$(ivldir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(MKDIR_P) '$(DESTDIR)$(ivldir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(ivldir)" || exit 1; \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(ivldir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(ivldir)"; \
	}

uninstall-ivlLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(ivl_LTLIBRARIES)'; test -n "$(ivldir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(ivldir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(ivldir)/$$f"; \
	done

clean-ivlLTLIBRARIES:
	-test -z "$(ivl_LTLIBRARIES)" || rm -f $(ivl_LTLIBRARIES)
	@list='$(ivl_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}

install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(MKDIR_P) '$(DESTDIR)$(libdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(libdir)" || exit 1; \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(libdir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(libdir)"; \
	}

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(libdir)/$$f"; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}

clean-noinstLTLIBRARIES:
	-test -z "$(noinst_LTLIBRARIES)" || rm -f $(noinst_LTLIBRARIES)
	@list='$(noinst_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}

install-tclLTLIBRARIES: $(tcl_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	@list='$(tcl_LTLIBRARIES)'; test -n "$(tcldir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(MKDIR_P) '$(DESTDIR)$(tcldir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(tcldir)" || exit 1; \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(tcldir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(tcldir)"; \
	}

uninstall-tclLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(tcl_LTLIBRARIES)'; test -n "$(tcldir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(tcldir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(tcldir)/$$f"; \
	done

clean-tclLTLIBRARIES:
	-test -z "$(tcl_LTLIBRARIES)" || rm -f $(tcl_LTLIBRARIES)
	@list='$(tcl_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}

avr.vpi.la: $(avr_vpi_la_OBJECTS) $(avr_vpi_la_DEPENDENCIES) $(EXTRA_avr_vpi_la_DEPENDENCIES) 
	$(AM_V_CXXLD)$(avr_vpi_la_LINK) $(am_avr_vpi_la_rpath) $(avr_vpi_la_OBJECTS) $(avr_vpi_la_LIBADD) $(LIBS)
cmd/$(am__dirstamp):
	@$(MKDIR_P) cmd
	@: > cmd/$(am__dirstamp)
cmd/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) cmd/$(DEPDIR)
	@: > cmd/$(DEPDIR)/$(am__dirstamp)
cmd/gdbserver.lo: cmd/$(am__dirstamp) cmd/$(DEPDIR)/$(am__dirstamp)
cmd/dumpargs.lo: cmd/$(am__dirstamp) cmd/$(DEPDIR)/$(am__dirstamp)
hwtimer/$(am__dirstamp):
	@$(MKDIR_P) hwtimer
	@: > hwtimer/$(am__dirstamp)
hwtimer/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) hwtimer/$(DEPDIR)
	@: > hwtimer/$(DEPDIR)/$(am__dirstamp)
hwtimer/timerprescaler.lo: hwtimer/$(am__dirstamp) \
	hwtimer/$(DEPDIR)/$(am__dirstamp)
hwtimer/prescalermux.lo: hwtimer/$(am__dirstamp) \
	hwtimer/$(DEPDIR)/$(am__dirstamp)
hwtimer/timerirq.lo: hwtimer/$(am__dirstamp) \
	hwtimer/$(DEPDIR)/$(am__dirstamp)
hwtimer/icapturesrc.lo: hwtimer/$(am__dirstamp) \
	hwtimer/$(DEPDIR)/$(am__dirstamp)
hwtimer/hwtimer.lo: hwtimer/$(am__dirstamp) \
	hwtimer/$(DEPDIR)/$(am__dirstamp)
ui/$(am__dirstamp):
	@$(MKDIR_P) ui
	@: > ui/$(am__dirstamp)
ui/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) ui/$(DEPDIR)
	@: > ui/$(DEPDIR)/$(am__dirstamp)
ui/keyboard.lo: ui/$(am__dirstamp) ui/$(DEPDIR)/$(am__dirstamp)
ui/lcd.lo: ui/$(am__dirstamp) ui/$(DEPDIR)/$(am__dirstamp)
ui/mysocket.lo: ui/$(am__dirstamp) ui/$(DEPDIR)/$(am__dirstamp)
ui/extpin.lo: ui/$(am__dirstamp) ui/$(DEPDIR)/$(am__dirstamp)
ui/scope.lo: ui/$(am__dirstamp) ui/$(DEPDIR)/$(am__dirstamp)
ui/serialrx.lo: ui/$(am__dirstamp) ui/$(DEPDIR)/$(am__dirstamp)
ui/serialtx.lo: ui/$(am__dirstamp) ui/$(DEPDIR)/$(am__dirstamp)
ui/ui.lo: ui/$(am__dirstamp) ui/$(DEPDIR)/$(am__dirstamp)

libsim.la: $(libsim_la_OBJECTS) $(libsim_la_DEPENDENCIES) $(EXTRA_libsim_la_DEPENDENCIES) 
	$(AM_V_CXXLD)$(libsim_la_LINK) -rpath $(libdir) $(libsim_la_OBJECTS) $(libsim_la_LIBADD) $(LIBS)

libsimulavr.la: $(libsimulavr_la_OBJECTS) $(libsimulavr_la_DEPENDENCIES) $(EXTRA_libsimulavr_la_DEPENDENCIES) 
	$(AM_V_CXXLD)$(libsimulavr_la_LINK) $(am_libsimulavr_la_rpath) $(libsimulavr_la_OBJECTS) $(libsimulavr_la_LIBADD) $(LIBS)
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p \
	 || test -f $$p1 \
	  ; then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' \
	    -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	    echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	    $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' \
	`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

clean-noinstPROGRAMS:
	@list='$(noinst_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list
ui/kbdgentables.$(OBJEXT): ui/$(am__dirstamp) \
	ui/$(DEPDIR)/$(am__dirstamp)

kbdgentables$(EXEEXT): $(kbdgentables_OBJECTS) $(kbdgentables_DEPENDENCIES) $(EXTRA_kbdgentables_DEPENDENCIES) 
	@rm -f kbdgentables$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(kbdgentables_OBJECTS) $(kbdgentables_LDADD) $(LIBS)
cmd/main.$(OBJEXT): cmd/$(am__dirstamp) cmd/$(DEPDIR)/$(am__dirstamp)

simulavr$(EXEEXT): $(simulavr_OBJECTS) $(simulavr_DEPENDENCIES) $(EXTRA_simulavr_DEPENDENCIES) 
	@rm -f simulavr$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(simulavr_OBJECTS) $(simulavr_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)
	-rm -f cmd/*.$(OBJEXT)
	-rm -f cmd/*.lo
	-rm -f hwtimer/*.$(OBJEXT)
	-rm -f hwtimer/*.lo
	-rm -f ui/*.$(OBJEXT)
	-rm -f ui/*.lo

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/adcpin.Plo
include ./$(DEPDIR)/application.Plo
include ./$(DEPDIR)/at4433.Plo
include ./$(DEPDIR)/at8515.Plo
include ./$(DEPDIR)/at90canbase.Plo
include ./$(DEPDIR)/atmega128.Plo
include ./$(DEPDIR)/atmega1284abase.Plo
include ./$(DEPDIR)/atmega16_32.Plo
include ./$(DEPDIR)/atmega668base.Plo
include ./$(DEPDIR)/atmega8.Plo
include ./$(DEPDIR)/attiny2313.Plo
include ./$(DEPDIR)/attiny25_45_85.Plo
include ./$(DEPDIR)/avr_vpi_la-vpi.Plo
include ./$(DEPDIR)/avrdevice.Plo
include ./$(DEPDIR)/avrerror.Plo
include ./$(DEPDIR)/avrfactory.Plo
include ./$(DEPDIR)/avrmalloc.Plo
include ./$(DEPDIR)/avrreadelf.Plo
include ./$(DEPDIR)/avrsignature.Plo
include ./$(DEPDIR)/decoder.Plo
include ./$(DEPDIR)/decoder_trace.Plo
include ./$(DEPDIR)/externalirq.Plo
include ./$(DEPDIR)/flash.Plo
include ./$(DEPDIR)/flashprog.Plo
include ./$(DEPDIR)/hardware.Plo
include ./$(DEPDIR)/helper.Plo
include ./$(DEPDIR)/hwacomp.Plo
include ./$(DEPDIR)/hwad.Plo
include ./$(DEPDIR)/hweeprom.Plo
include ./$(DEPDIR)/hwpinchange.Plo
include ./$(DEPDIR)/hwport.Plo
include ./$(DEPDIR)/hwspi.Plo
include ./$(DEPDIR)/hwsreg.Plo
include ./$(DEPDIR)/hwstack.Plo
include ./$(DEPDIR)/hwuart.Plo
include ./$(DEPDIR)/hwwado.Plo
include ./$(DEPDIR)/ioregs.Plo
include ./$(DEPDIR)/irqsystem.Plo
include ./$(DEPDIR)/memory.Plo
include ./$(DEPDIR)/net.Plo
include ./$(DEPDIR)/pin.Plo
include ./$(DEPDIR)/pinatport.Plo
include ./$(DEPDIR)/pinmon.Plo
include ./$(DEPDIR)/rwmem.Plo
include ./$(DEPDIR)/simulavr_wrap.Plo
include ./$(DEPDIR)/specialmem.Plo
include ./$(DEPDIR)/spisink.Plo
include ./$(DEPDIR)/spisrc.Plo
include ./$(DEPDIR)/string2.Plo
include ./$(DEPDIR)/systemclock.Plo
include ./$(DEPDIR)/traceval.Plo
include cmd/$(DEPDIR)/dumpargs.Plo
include cmd/$(DEPDIR)/gdbserver.Plo
include cmd/$(DEPDIR)/main.Po
include hwtimer/$(DEPDIR)/hwtimer.Plo
include hwtimer/$(DEPDIR)/icapturesrc.Plo
include hwtimer/$(DEPDIR)/prescalermux.Plo
include hwtimer/$(DEPDIR)/timerirq.Plo
include hwtimer/$(DEPDIR)/timerprescaler.Plo
include ui/$(DEPDIR)/extpin.Plo
include ui/$(DEPDIR)/kbdgentables.Po
include ui/$(DEPDIR)/keyboard.Plo
include ui/$(DEPDIR)/lcd.Plo
include ui/$(DEPDIR)/mysocket.Plo
include ui/$(DEPDIR)/scope.Plo
include ui/$(DEPDIR)/serialrx.Plo
include ui/$(DEPDIR)/serialtx.Plo
include ui/$(DEPDIR)/ui.Plo

.cpp.o:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Plo
#	$(AM_V_CXX)source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LTCXXCOMPILE) -c -o $@ $<

avr_vpi_la-vpi.lo: vpi.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(avr_vpi_la_CXXFLAGS) $(CXXFLAGS) -MT avr_vpi_la-vpi.lo -MD -MP -MF $(DEPDIR)/avr_vpi_la-vpi.Tpo -c -o avr_vpi_la-vpi.lo `test -f 'vpi.cpp' || echo '$(srcdir)/'`vpi.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/avr_vpi_la-vpi.Tpo $(DEPDIR)/avr_vpi_la-vpi.Plo
#	$(AM_V_CXX)source='vpi.cpp' object='avr_vpi_la-vpi.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(avr_vpi_la_CXXFLAGS) $(CXXFLAGS) -c -o avr_vpi_la-vpi.lo `test -f 'vpi.cpp' || echo '$(srcdir)/'`vpi.cpp

.cxx.o:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ $<

.cxx.obj:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cxx.lo:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Plo
#	$(AM_V_CXX)source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LTCXXCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
	-rm -rf cmd/.libs cmd/_libs
	-rm -rf hwtimer/.libs hwtimer/_libs
	-rm -rf ui/.libs ui/_libs
install-pkgincludeHEADERS: $(pkginclude_HEADERS)
	@$(NORMAL_INSTALL)
	@list='$(pkginclude_HEADERS)'; test -n "$(pkgincludedir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(pkgincludedir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(pkgincludedir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(pkgincludedir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(pkgincludedir)" || exit $$?; \
	done

uninstall-pkgincludeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(pkginclude_HEADERS)'; test -n "$(pkgincludedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(pkgincludedir)'; $(am__uninstall_files_from_dir)

# This directory's subdirectories are mostly independent; you can cd
# into them and run 'make' without going through this Makefile.
# To change the values of 'make' variables: instead of editing Makefiles,
# (1) if the variable is set in 'config.status', edit 'config.status'
#     (which will cause the Makefiles to be regenerated when you run 'make');
# (2) otherwise, pass the desired values on the 'make' command line.
$(am__recursive_targets):
	@fail=; \
	if $(am__make_keepgoing); then \
	  failcom='fail=yes'; \
	else \
	  failcom='exit 1'; \
	fi; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-recursive
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      set "$$@" "$$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-recursive

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-recursive

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	@list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    $(am__make_dryrun) \
	      || test -d "$(distdir)/$$subdir" \
	      || $(MKDIR_P) "$(distdir)/$$subdir" \
	      || exit 1; \
	    dir1=$$subdir; dir2="$(distdir)/$$subdir"; \
	    $(am__relativize); \
	    new_distdir=$$reldir; \
	    dir1=$$subdir; dir2="$(top_distdir)"; \
	    $(am__relativize); \
	    new_top_distdir=$$reldir; \
	    echo " (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) top_distdir="$$new_top_distdir" distdir="$$new_distdir" \\"; \
	    echo "     am__remove_distdir=: am__skip_length_check=: am__skip_mode_fix=: distdir)"; \
	    ($(am__cd) $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$new_top_distdir" \
	        distdir="$$new_distdir" \
		am__remove_distdir=: \
		am__skip_length_check=: \
		am__skip_mode_fix=: \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-recursive
all-am: Makefile $(LTLIBRARIES) $(PROGRAMS) $(HEADERS) config.h \
		all-local
install-binPROGRAMS: install-libLTLIBRARIES

installdirs: installdirs-recursive
installdirs-am:
	for dir in "$(DESTDIR)$(ivldir)" "$(DESTDIR)$(libdir)" "$(DESTDIR)$(tcldir)" "$(DESTDIR)$(bindir)" "$(DESTDIR)$(pkgincludedir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-rm -f cmd/$(DEPDIR)/$(am__dirstamp)
	-rm -f cmd/$(am__dirstamp)
	-rm -f hwtimer/$(DEPDIR)/$(am__dirstamp)
	-rm -f hwtimer/$(am__dirstamp)
	-rm -f ui/$(DEPDIR)/$(am__dirstamp)
	-rm -f ui/$(am__dirstamp)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(MAINTAINERCLEANFILES)" || rm -f $(MAINTAINERCLEANFILES)
clean: clean-recursive

clean-am: clean-binPROGRAMS clean-generic clean-ivlLTLIBRARIES \
	clean-libLTLIBRARIES clean-libtool clean-noinstLTLIBRARIES \
	clean-noinstPROGRAMS clean-tclLTLIBRARIES mostlyclean-am

distclean: distclean-recursive
	-rm -rf ./$(DEPDIR) cmd/$(DEPDIR) hwtimer/$(DEPDIR) ui/$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-hdr distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

html-am:

info: info-recursive

info-am:

install-data-am: install-ivlLTLIBRARIES install-pkgincludeHEADERS \
	install-tclLTLIBRARIES

install-dvi: install-dvi-recursive

install-dvi-am:

install-exec-am: install-binPROGRAMS install-libLTLIBRARIES

install-html: install-html-recursive

install-html-am:

install-info: install-info-recursive

install-info-am:

install-man:

install-pdf: install-pdf-recursive

install-pdf-am:

install-ps: install-ps-recursive

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -rf ./$(DEPDIR) cmd/$(DEPDIR) hwtimer/$(DEPDIR) ui/$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-ivlLTLIBRARIES \
	uninstall-libLTLIBRARIES uninstall-pkgincludeHEADERS \
	uninstall-tclLTLIBRARIES

.MAKE: $(am__recursive_targets) all install-am install-strip

.PHONY: $(am__recursive_targets) CTAGS GTAGS TAGS all all-am all-local \
	check check-am clean clean-binPROGRAMS clean-generic \
	clean-ivlLTLIBRARIES clean-libLTLIBRARIES clean-libtool \
	clean-noinstLTLIBRARIES clean-noinstPROGRAMS \
	clean-tclLTLIBRARIES cscopelist-am ctags ctags-am distclean \
	distclean-compile distclean-generic distclean-hdr \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-binPROGRAMS \
	install-data install-data-am install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-info install-info-am install-ivlLTLIBRARIES \
	install-libLTLIBRARIES install-man install-pdf install-pdf-am \
	install-pkgincludeHEADERS install-ps install-ps-am \
	install-strip install-tclLTLIBRARIES installcheck \
	installcheck-am installdirs installdirs-am maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags tags-am uninstall uninstall-am uninstall-binPROGRAMS \
	uninstall-ivlLTLIBRARIES uninstall-libLTLIBRARIES \
	uninstall-pkgincludeHEADERS uninstall-tclLTLIBRARIES

.PRECIOUS: Makefile


export LIBSIM_SRCS=$(libsim_la_SOURCES)
export LIBSIM_HDRS=$(pkginclude_HEADERS)

#$(VPI_LIB): avr.vpi.la
#	cp .libs/avr.vpi.so $(VPI_LIB)

#install-vpi:
#	$(INSTALL) -d $(DESTDIR)$(ivldir)
#	$(INSTALL_PROGRAM) $(VPI_LIB) $(DESTDIR)$(ivldir)

simulavr_wrap.cxx: simulavr.i $(TCLHEADER)
	echo "Error: SWIG is not installed. You should look at http://www.swig.org" ; false -c++ -o $@ $(srcdir)/simulavr.i

simulavr_wrap.lo: simulavr_wrap.cxx
	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(TCL_INCLUDE) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT $@ -MD -MP -MF .deps/simulavr_wrap.Tpo -c -o $@ $<

$(srcdir)/ui/keyboard.cpp: $(srcdir)/ui/keytrans.h 

 $(srcdir)/ui/keytrans.h: $(builddir)/kbdgentables \
     $(srcdir)/ui/keynumber_to_scancode.dat \
     $(srcdir)/ui/xcode_to_keynumber.dat
	$(builddir)/kbdgentables $(srcdir)/ui

all-local: $(VPI_LIB)

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
